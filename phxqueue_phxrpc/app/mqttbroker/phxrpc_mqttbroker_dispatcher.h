/* phxrpc_mqttbroker_dispatcher.h

 Generated by phxrpc_pb2service from mqttbroker.proto

 Please DO NOT edit unless you know exactly what you are doing.

*/

#pragma once

#include "phxrpc/rpc.h"


class MqttBrokerService;

class MqttBrokerDispatcher {
  public:
    static const phxrpc::BaseDispatcher<MqttBrokerDispatcher>::URIFuncMap &GetURIFuncMap();

    MqttBrokerDispatcher(MqttBrokerService &service, phxrpc::DispatcherArgs_t *dispatcher_args);

    virtual ~MqttBrokerDispatcher();

    int PHXEcho(const phxrpc::BaseRequest &req, phxrpc::BaseResponse *const resp);
    int HttpPublish(const phxrpc::BaseRequest &req, phxrpc::BaseResponse *const resp);
    int MqttConnect(const phxrpc::BaseRequest &req, phxrpc::BaseResponse *const resp);
    int MqttPublish(const phxrpc::BaseRequest &req, phxrpc::BaseResponse *const resp);
    int MqttPuback(const phxrpc::BaseRequest &req, phxrpc::BaseResponse *const resp);
    int MqttPubrec(const phxrpc::BaseRequest &req, phxrpc::BaseResponse *const resp);
    int MqttPubrel(const phxrpc::BaseRequest &req, phxrpc::BaseResponse *const resp);
    int MqttPubcomp(const phxrpc::BaseRequest &req, phxrpc::BaseResponse *const resp);
    int MqttSubscribe(const phxrpc::BaseRequest &req, phxrpc::BaseResponse *const resp);
    int MqttUnsubscribe(const phxrpc::BaseRequest &req, phxrpc::BaseResponse *const resp);
    int MqttPing(const phxrpc::BaseRequest &req, phxrpc::BaseResponse *const resp);
    int MqttDisconnect(const phxrpc::BaseRequest &req, phxrpc::BaseResponse *const resp);

  private:
    MqttBrokerService &service_;
    phxrpc::DispatcherArgs_t *dispatcher_args_;
};

