/* phxrpc_mqttbroker_dispatcher.h

 Generated by phxrpc_pb2service from mqttbroker.proto

 Please DO NOT edit unless you know exactly what you are doing.

*/

#pragma once

#include "phxrpc/rpc.h"


class MqttBrokerService;

class MqttBrokerDispatcher {
  public:
    static const phxrpc::BaseDispatcher<MqttBrokerDispatcher>::URIFuncMap &GetURIFuncMap();

    MqttBrokerDispatcher(MqttBrokerService &service, phxrpc::DispatcherArgs_t *dispatcher_args);

    virtual ~MqttBrokerDispatcher();

    int PHXEcho(const phxrpc::BaseRequest *const req, phxrpc::BaseResponse *const resp);
    int PhxMqttConnect(const phxrpc::BaseRequest *const req, phxrpc::BaseResponse *const resp);
    int PhxMqttPublish(const phxrpc::BaseRequest *const req, phxrpc::BaseResponse *const resp);
    int PhxMqttPuback(const phxrpc::BaseRequest *const req, phxrpc::BaseResponse *const resp);
    int PhxMqttPubrec(const phxrpc::BaseRequest *const req, phxrpc::BaseResponse *const resp);
    int PhxMqttPubrel(const phxrpc::BaseRequest *const req, phxrpc::BaseResponse *const resp);
    int PhxMqttPubcomp(const phxrpc::BaseRequest *const req, phxrpc::BaseResponse *const resp);
    int PhxMqttSubscribe(const phxrpc::BaseRequest *const req, phxrpc::BaseResponse *const resp);
    int PhxMqttUnsubscribe(const phxrpc::BaseRequest *const req, phxrpc::BaseResponse *const resp);
    int PhxMqttPing(const phxrpc::BaseRequest *const req, phxrpc::BaseResponse *const resp);
    int PhxMqttDisconnect(const phxrpc::BaseRequest *const req, phxrpc::BaseResponse *const resp);
    int PhxHttpPublish(const phxrpc::BaseRequest *const req, phxrpc::BaseResponse *const resp);

  private:
    MqttBrokerService &service_;
    phxrpc::DispatcherArgs_t *dispatcher_args_;
};

