/* phxrpc_mqttbroker_tool.cpp

 Generated by phxrpc_pb2tool from mqttbroker.proto

 Please DO NOT edit unless you know exactly what you are doing.

*/

#include "phxrpc/file.h"

#include "phxrpc_mqttbroker_tool.h"
#include "mqttbroker_client.h"


using namespace phxrpc;


MqttBrokerTool::MqttBrokerTool() {
}

MqttBrokerTool::~MqttBrokerTool() {
}

// http protocol

int MqttBrokerTool::PHXEcho(phxrpc::OptMap &/* opt_map */) {
    printf("\n    *** PHXEcho unimplement ***\n");

    return -1;
}

int MqttBrokerTool::HttpPublish(phxrpc::OptMap &/* opt_map */) {
    printf("\n    *** HttpPublish unimplement ***\n");

    return -1;
}

// mqtt protocol

int MqttBrokerTool::MqttConnect(phxrpc::OptMap &/* opt_map */) {
    printf("\n    *** MqttConnect unimplement ***\n");

    return -1;
}

int MqttBrokerTool::MqttPublish(phxrpc::OptMap &/* opt_map */) {
    printf("\n    *** MqttPublish unimplement ***\n");

    return -1;
}

int MqttBrokerTool::MqttPuback(phxrpc::OptMap &/* opt_map */) {
    printf("\n    *** MqttPuback unimplement ***\n");

    return -1;
}

int MqttBrokerTool::MqttPubrec(phxrpc::OptMap &/* opt_map */) {
    printf("\n    *** MqttPubrec unimplement ***\n");

    return -1;
}

int MqttBrokerTool::MqttPubrel(phxrpc::OptMap &/* opt_map */) {
    printf("\n    *** MqttPubrel unimplement ***\n");

    return -1;
}

int MqttBrokerTool::MqttPubcomp(phxrpc::OptMap &/* opt_map */) {
    printf("\n    *** MqttPubcomp unimplement ***\n");

    return -1;
}

int MqttBrokerTool::MqttSubscribe(phxrpc::OptMap &/* opt_map */) {
    printf("\n    *** MqttSubscribe unimplement ***\n");

    return -1;
}

int MqttBrokerTool::MqttUnsubscribe(phxrpc::OptMap &/* opt_map */) {
    printf("\n    *** MqttUnsubscribe unimplement ***\n");

    return -1;
}

int MqttBrokerTool::MqttPing(phxrpc::OptMap &/* opt_map */) {
    printf("\n    *** MqttPing unimplement ***\n");

    return -1;
}

int MqttBrokerTool::MqttDisconnect(phxrpc::OptMap &/* opt_map */) {
    printf("\n    *** MqttDisconnect unimplement ***\n");

    return -1;
}

