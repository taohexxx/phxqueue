/* phxrpc_mqttbroker_service.cpp

 Generated by phxrpc_pb2service from mqttbroker.proto

 Please DO NOT edit unless you know exactly what you are doing.

*/

#include "phxrpc_mqttbroker_service.h"

#include "mqttbroker.pb.h"
#include "phxrpc/file.h"


MqttBrokerService::MqttBrokerService() {
}

MqttBrokerService::~MqttBrokerService() {
}

int MqttBrokerService::PHXEcho(const google::protobuf::StringValue &/* req */, google::protobuf::StringValue */* resp */) {
    phxrpc::log(LOG_ERR, "ERROR: PHXEcho unimplemented");
    return -1;
}

int MqttBrokerService::MqttConnect(const phxqueue_phxrpc::logic::mqtt::MqttConnectPb &/* req */, phxqueue_phxrpc::logic::mqtt::MqttConnackPb */* resp */) {
    phxrpc::log(LOG_ERR, "ERROR: MqttConnect unimplemented");
    return -1;
}

int MqttBrokerService::MqttPublish(const phxqueue_phxrpc::logic::mqtt::MqttPublishPb &/* req */, google::protobuf::Empty */* resp */) {
    phxrpc::log(LOG_ERR, "ERROR: MqttPublish unimplemented");
    return -1;
}

int MqttBrokerService::MqttPuback(const phxqueue_phxrpc::logic::mqtt::MqttPubackPb &/* req */, google::protobuf::Empty */* resp */) {
    phxrpc::log(LOG_ERR, "ERROR: MqttPuback unimplemented");
    return -1;
}

int MqttBrokerService::MqttPubrec(const phxqueue_phxrpc::logic::mqtt::MqttPubrecPb &/* req */, google::protobuf::Empty */* resp */) {
    phxrpc::log(LOG_ERR, "ERROR: MqttPubrec unimplemented");
    return -1;
}

int MqttBrokerService::MqttPubrel(const phxqueue_phxrpc::logic::mqtt::MqttPubrelPb &/* req */, google::protobuf::Empty */* resp */) {
    phxrpc::log(LOG_ERR, "ERROR: MqttPubrel unimplemented");
    return -1;
}

int MqttBrokerService::MqttPubcomp(const phxqueue_phxrpc::logic::mqtt::MqttPubcompPb &/* req */, google::protobuf::Empty */* resp */) {
    phxrpc::log(LOG_ERR, "ERROR: MqttPubcomp unimplemented");
    return -1;
}

int MqttBrokerService::MqttSubscribe(const phxqueue_phxrpc::logic::mqtt::MqttSubscribePb &/* req */, phxqueue_phxrpc::logic::mqtt::MqttSubackPb */* resp */) {
    phxrpc::log(LOG_ERR, "ERROR: MqttSubscribe unimplemented");
    return -1;
}

int MqttBrokerService::MqttUnsubscribe(const phxqueue_phxrpc::logic::mqtt::MqttUnsubscribePb &/* req */, phxqueue_phxrpc::logic::mqtt::MqttUnsubackPb */* resp */) {
    phxrpc::log(LOG_ERR, "ERROR: MqttUnsubscribe unimplemented");
    return -1;
}

int MqttBrokerService::MqttPing(const phxqueue_phxrpc::logic::mqtt::MqttPingreqPb &/* req */, phxqueue_phxrpc::logic::mqtt::MqttPingrespPb */* resp */) {
    phxrpc::log(LOG_ERR, "ERROR: MqttPing unimplemented");
    return -1;
}

int MqttBrokerService::MqttDisconnect(const phxqueue_phxrpc::logic::mqtt::MqttDisconnectPb &/* req */, google::protobuf::Empty */* resp */) {
    phxrpc::log(LOG_ERR, "ERROR: MqttDisconnect unimplemented");
    return -1;
}

int MqttBrokerService::HttpPublish(const phxqueue_phxrpc::logic::mqtt::HttpPublishPb &/* req */, phxqueue_phxrpc::logic::mqtt::HttpPubackPb */* resp */) {
    phxrpc::log(LOG_ERR, "ERROR: HttpPublish unimplemented");
    return -1;
}

